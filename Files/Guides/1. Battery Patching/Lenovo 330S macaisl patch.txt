
# created by macmuchmore 04/01/2019

# works for:
# Lenovo IdeaPad 330S-15IKB-81F500NSUS


# 16-bit registers
into device label H_EC code_regex BML0,\s+16, replace_matched begin ML00,8, ML01,8, end;
into device label H_EC code_regex BAV0,\s+16, replace_matched begin AV00,8, AV01,8, end;
into device label H_EC code_regex BAC0,\s+16, replace_matched begin AC01,8, AC02,8, end;
into device label H_EC code_regex BRC0,\s+16, replace_matched begin RC00,8, RC01,8, end;
into device label H_EC code_regex BTP0,\s+16, replace_matched begin TP00,8, TP01,8, end;
into device label H_EC code_regex BCC0,\s+16, replace_matched begin CF00,8, CF01,8, end;
into device label H_EC code_regex FCC0,\s+16, replace_matched begin CC01,8, CC02,8, end;
into device label H_EC code_regex BDC0,\s+16, replace_matched begin DC01,8, DC02,8, end;
into device label H_EC code_regex BDV0,\s+16, replace_matched begin DV00,8, DV01,8, end;
into device label H_EC code_regex BMD0,\s+16, replace_matched begin MD00,8, MD01,8, end;
into device label H_EC code_regex ATE0,\s+16, replace_matched begin TE00,8, TE01,8, end;
into device label H_EC code_regex ATF0,\s+16, replace_matched begin TF00,8, TF01,8, end;

# Fix 16-bit registers
into method label _BIF code_regex \(BML0, replaceall_matched begin (B1B2(ML00,ML01), end;
into method label _BST code_regex \(BML0, replaceall_matched begin (B1B2(ML00,ML01), end;
into method label _BST code_regex \(BAV0, replaceall_matched begin (B1B2(AV00,AV01), end;
into method label GSBI code_regex \(BAV0, replaceall_matched begin (B1B2(AV00,AV01), end;
into method label _BST code_regex \(BAC0, replaceall_matched begin (B1B2(AC01,AC02), end;
into method label _BST code_regex \(BRC0, replaceall_matched begin (B1B2(RC00,RC01), end;
into method label GSBI code_regex \(BRC0, replaceall_matched begin (B1B2(RC00,RC01), end;
into method label GSBI code_regex \(BTP0, replaceall_matched begin (B1B2(TP00,TP01), end;
into method label GSBI code_regex \(BCC0, replaceall_matched begin (B1B2(CF00,CF01), end;
into method label _BIF code_regex \(FCC0, replaceall_matched begin (B1B2(CC01,CC02), end;
into method label GSBI code_regex \(FCC0, replaceall_matched begin (B1B2(CC01,CC02), end;
into method label _BIF code_regex \(BDC0, replaceall_matched begin (B1B2(DC01,DC02), end;
into method label GSBI code_regex \(BDC0, replaceall_matched begin (B1B2(DC01,DC02), end;
into method label _BIF code_regex \(BDV0, replaceall_matched begin (B1B2(DV00,DV01), end;
into method label GSBI code_regex \(BDV0, replaceall_matched begin (B1B2(DV00,DV01), end;
into method label GSBI code_regex \(BMD0, replaceall_matched begin (B1B2(MD00,MD01), end;
into method label GSBI code_regex \(ATE0, replaceall_matched begin (B1B2(TE00,TE01), end;
into method label SMTF code_regex \(ATF0, replaceall_matched begin (B1B2(TF00,TF01), end;
into method label GSBI code_regex \(ATF0, replaceall_matched begin (B1B2(TF00,TF01), end;


# 32-bit registers
into device label H_EC code_regex CHEM,\s+32, replace_matched begin EM00,8, EM01,8, EM02,8, EM03,8, end;

# Fix 32-bit registers
into method label GSBI code_regex \(CHEM, replaceall_matched begin (B1B4(EM00,EM01,EM02,EM03), end;

into method label B1B2 remove_entry;
into definitionblock code_regex . insert
begin
Method (B1B2, 2, NotSerialized) { Return(Or(Arg0, ShiftLeft(Arg1, 8))) }\n
end;

into method label B1B4 remove_entry;
into definitionblock code_regex . insert
begin
Method (B1B4, 4, NotSerialized)\n
{\n
    Store(Arg3, Local0)\n
    Or(Arg2, ShiftLeft(Local0, 8), Local0)\n
    Or(Arg1, ShiftLeft(Local0, 8), Local0)\n
    Or(Arg0, ShiftLeft(Local0, 8), Local0)\n
    Return(Local0)\n
}\n
end;



# 64/96/128-bit registers
into device label H_EC code_regex (DENA,)\s+(64) replace_matched begin DENX,%2,//%1%2 end;
into device label H_EC code_regex (FWIN,)\s+(64) replace_matched begin FWIX,%2,//%1%2 end;
into device label H_EC code_regex (MANA,)\s+(96) replace_matched begin MANX,%2,//%1%2 end;
into device label H_EC code_regex (BARC,)\s+(128) replace_matched begin BARX,%2,//%1%2 end;


# utility methods to read/write buffers from/to EC
into method label RE1B parent_label H_EC remove_entry;
into method label RECB parent_label H_EC remove_entry;
into device label H_EC insert
begin
Method (RE1B, 1, NotSerialized)\n
{\n
    OperationRegion(ERAM, EmbeddedControl, Arg0, 1)\n
    Field(ERAM, ByteAcc, NoLock, Preserve) { BYTE, 8 }\n
    Return(BYTE)\n
}\n
Method (RECB, 2, Serialized)\n
// Arg0 - offset in bytes from zero-based EC\n
// Arg1 - size of buffer in bits\n
{\n
    ShiftRight(Add(Arg1,7), 3, Arg1)\n
    Name(TEMP, Buffer(Arg1) { })\n
    Add(Arg0, Arg1, Arg1)\n
    Store(0, Local0)\n
    While (LLess(Arg0, Arg1))\n
    {\n
        Store(RE1B(Arg0), Index(TEMP, Local0))\n
        Increment(Arg0)\n
        Increment(Local0)\n
    }\n
    Return(TEMP)\n
}\n
end;


# Fix 64/96/128-bit registers
into method label GBTI code_regex \(DENA, replaceall_matched begin (RECB(0x8C,64), end;
into method label GBTI code_regex \(FWIN, replaceall_matched begin (RECB(0xA0,64), end;
into method label GBTI code_regex \(MANA, replaceall_matched begin (RECB(0x30,96), end;
into method label GBTI code_regex \(BARC, replaceall_matched begin (RECB(0xA8,128), end;


